<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.atguigu.jxc.dao.GoodsDao">

    <resultMap id="BaseResultMap" type="com.atguigu.jxc.entity.Goods">
        <result column="goods_id" property="goodsId" jdbcType="INTEGER" />
        <result column="goods_code" property="goodsCode" jdbcType="VARCHAR" />
        <result column="goods_name" property="goodsName" jdbcType="VARCHAR" />
        <result column="inventory_quantity" property="inventoryQuantity" jdbcType="INTEGER" />
        <result column="last_purchasing_price" property="lastPurchasingPrice" jdbcType="DECIMAL" />
        <result column="min_num" property="minNum" jdbcType="INTEGER" />
        <result column="goods_model" property="goodsModel" jdbcType="VARCHAR" />
        <result column="goods_producer" property="goodsProducer" jdbcType="VARCHAR" />
        <result column="purchasing_price" property="purchasingPrice" jdbcType="DECIMAL" />
        <result column="remarks" property="remarks" jdbcType="VARCHAR" />
        <result column="selling_price" property="sellingPrice" jdbcType="DECIMAL" />
        <result column="state" property="state" jdbcType="INTEGER" />
        <result column="goods_unit" property="goodsUnit" jdbcType="VARCHAR" />
        <result column="goods_type_id" property="goodsTypeId" jdbcType="INTEGER" />
        <result column="goods_type_name" property="goodsTypeName" jdbcType="VARCHAR" />
    </resultMap>

    <select id="getGoodsList" resultMap="BaseResultMap">
        SELECT
            t_goods.goods_id,
            t_goods.goods_name,
            t_goods.goods_code,
            t_goods.goods_type_id,
            t_goods_type.p_id,
            t_goods.inventory_quantity,
            t_goods.last_purchasing_price,
            t_goods.min_num,
            t_goods.goods_model,
            t_goods.goods_producer,
            t_goods.purchasing_price,
            t_goods.remarks,
            t_goods.selling_price,
            t_goods.state,
            t_goods.goods_unit,
            t_goods_type.goods_type_name
        FROM
            t_goods
        LEFT JOIN t_goods_type ON t_goods.goods_type_id = t_goods_type.goods_type_id
        <where>
            <if test="goodsName != null and goodsName != ''">
                AND t_goods.goods_name LIKE CONCAT('%', #{goodsName} ,'%')
            </if>
            <if test="goodsTypeId != null and goodsTypeId != 1">
                AND
                (
                    t_goods.goods_type_id = #{goodsTypeId} OR
                    t_goods_type.p_id = #{goodsTypeId}
                )
            </if>
        </where>
        LIMIT #{offSet}, #{pageRow}
    </select>

    <select id="getGoodsCount" resultType="java.lang.Integer">
        SELECT
            COUNT(*)
        FROM
            t_goods
        LEFT JOIN t_goods_type ON t_goods.goods_type_id = t_goods_type.goods_type_id
        <where>
            <if test="goodsName != null and goodsName != ''">
                AND t_goods.goods_name LIKE CONCAT('%', #{goodsName} ,'%')
            </if>
            <if test="goodsTypeId != null and goodsTypeId != 1">
                AND
                (
                    t_goods.goods_type_id = #{goodsTypeId} OR
                    t_goods_type.p_id = #{goodsTypeId}
                )
            </if>
        </where>
    </select>

    <select id="getMaxCode" resultType="java.lang.String">
        SELECT
            MAX( goods_code )
        FROM
            t_goods
    </select>

    <insert id="saveGoods" useGeneratedKeys="true" keyProperty="goodsId" parameterType="com.atguigu.jxc.entity.Goods">
        INSERT INTO t_goods
        (
        goods_code, goods_name, inventory_quantity, min_num, goods_model,
        goods_producer, purchasing_price,last_purchasing_price,remarks,selling_price,
        state,goods_unit,goods_type_id
        )
        VALUES
        (
        #{goodsCode}, #{goodsName}, #{inventoryQuantity}, #{minNum}, #{goodsModel},
        #{goodsProducer}, #{purchasingPrice}, #{lastPurchasingPrice}, #{remarks}, #{sellingPrice},
        #{state}, #{goodsUnit}, #{goodsTypeId}
        )
    </insert>

    <update id="updateGoods" parameterType="com.atguigu.jxc.entity.Goods">
        UPDATE t_goods
        <set>
            <if test="goodsCode != '' and goodsCode != null">
                goods_code = #{goodsCode},
            </if>
            <if test="goodsName != '' and goodsName != null">
                goods_name = #{goodsName},
            </if>
            <if test="inventoryQuantity != null">
                inventory_quantity = #{inventoryQuantity},
            </if>
            <if test="minNum != '' and minNum != null">
                min_num = #{minNum},
            </if>
            <if test="goodsModel != '' and goodsModel != null">
                goods_model = #{goodsModel},
            </if>
            <if test="goodsProducer != '' and goodsProducer != null">
                goods_producer = #{goodsProducer},
            </if>
            <if test="purchasingPrice != '' and purchasingPrice != null">
                purchasing_price = #{purchasingPrice},
            </if>
            <if test="lastPurchasingPrice != '' and lastPurchasingPrice != null">
                last_purchasing_price = #{lastPurchasingPrice},
            </if>
            <if test="remarks != '' and remarks != null">
                remarks = #{remarks},
            </if>
            <if test="sellingPrice != '' and sellingPrice != null">
                selling_price = #{sellingPrice},
            </if>
            <if test="state != '' and state != null">
                state = #{state},
            </if>
            <if test="goodsUnit != '' and goodsUnit != null">
                goods_unit = #{goodsUnit},
            </if>
            <if test="goodsTypeId != '' and goodsTypeId != null">
                goods_type_id = #{goodsTypeId},
            </if>
        </set>
        WHERE t_goods.goods_id = #{goodsId}
    </update>

    <delete id="deleteGoods" parameterType="java.lang.Integer">
        DELETE FROM
        t_goods
        WHERE t_goods.goods_id = #{goodsId}
    </delete>

    <select id="findByGoodsId" resultMap="BaseResultMap">
        SELECT
            t_goods.goods_id,
            t_goods.goods_code,
            t_goods.goods_name,
            t_goods.inventory_quantity,
            t_goods.last_purchasing_price,
            t_goods.min_num,
            t_goods.goods_model,
            t_goods.goods_producer,
            t_goods.purchasing_price,
            t_goods.remarks,
            t_goods.selling_price,
            t_goods.state,
            t_goods.goods_unit,
            t_goods.goods_type_id
        FROM
            t_goods
        WHERE
            t_goods.goods_id = #{goodsId}
    </select>

    <select id="getNoInventoryQuantity" resultMap="BaseResultMap">
        SELECT
            t_goods.goods_id,
            t_goods.goods_name,
            t_goods.goods_code,
            t_goods.goods_type_id,
            t_goods_type.p_id,
            t_goods.inventory_quantity,
            t_goods.last_purchasing_price,
            t_goods.min_num,
            t_goods.goods_model,
            t_goods.goods_producer,
            t_goods.purchasing_price,
            t_goods.remarks,
            t_goods.selling_price,
            t_goods.state,
            t_goods.goods_unit,
            t_goods_type.goods_type_name
        FROM
            t_goods
        LEFT JOIN t_goods_type ON t_goods.goods_type_id = t_goods_type.goods_type_id
        <where>
            <if test="nameOrCode != null and nameOrCode != ''">
                AND
                (
                t_goods.goods_name LIKE CONCAT('%', #{nameOrCode} ,'%') OR
                t_goods.goods_code LIKE CONCAT('%', #{nameOrCode} ,'%')
                )
            </if>
            AND t_goods.inventory_quantity &lt;= 0
        </where>
        LIMIT #{offSet}, #{pageRow}
    </select>

    <select id="getNoInventoryQuantityCount" resultType="java.lang.Integer">
        SELECT
            COUNT(*)
        FROM
            t_goods
        <where>
            <if test="nameOrCode != null and nameOrCode != ''">
                AND
                (
                t_goods.goods_name LIKE CONCAT('%', #{nameOrCode} ,'%') OR
                t_goods.goods_code LIKE CONCAT('%', #{nameOrCode} ,'%')
                )
            </if>
            AND t_goods.inventory_quantity &lt;= 0
        </where>
    </select>

    <select id="getHasInventoryQuantity" resultMap="BaseResultMap">
        SELECT
            t_goods.goods_id,
            t_goods.goods_name,
            t_goods.goods_code,
            t_goods.goods_type_id,
            t_goods_type.p_id,
            t_goods.inventory_quantity,
            t_goods.last_purchasing_price,
            t_goods.min_num,
            t_goods.goods_model,
            t_goods.goods_producer,
            t_goods.purchasing_price,
            t_goods.remarks,
            t_goods.selling_price,
            t_goods.state,
            t_goods.goods_unit,
            t_goods_type.goods_type_name
        FROM
            t_goods
        LEFT JOIN t_goods_type ON t_goods.goods_type_id = t_goods_type.goods_type_id
        <where>
            <if test="nameOrCode != null and nameOrCode != ''">
                AND
                (
                t_goods.goods_name LIKE CONCAT('%', #{nameOrCode} ,'%') OR
                t_goods.goods_code LIKE CONCAT('%', #{nameOrCode} ,'%')
                )
            </if>
            AND t_goods.inventory_quantity &gt; 0
        </where>
        LIMIT #{offSet}, #{pageRow}
    </select>

    <select id="getHasInventoryQuantityCount" resultType="java.lang.Integer">
        SELECT
            COUNT(*)
        FROM
        t_goods
        <where>
            <if test="nameOrCode != null and nameOrCode != ''">
                AND
                (
                t_goods.goods_name LIKE CONCAT('%', #{nameOrCode} ,'%')  OR
                t_goods.goods_code LIKE CONCAT('%', #{nameOrCode} ,'%')
                )
            </if>
            AND t_goods.inventory_quantity &gt; 0
        </where>
    </select>

    <select id="getGoodsInventoryList" resultMap="BaseResultMap">
        SELECT
            t_goods.goods_id,
            t_goods.goods_name,
            t_goods.goods_code,
            t_goods.goods_type_id,
            t_goods_type.p_id,
            t_goods.inventory_quantity,
            t_goods.last_purchasing_price,
            t_goods.min_num,
            t_goods.goods_model,
            t_goods.goods_producer,
            t_goods.purchasing_price,
            t_goods.remarks,
            t_goods.selling_price,
            t_goods.state,
            t_goods.goods_unit,
            t_goods_type.goods_type_name
        FROM
            t_goods
        LEFT JOIN t_goods_type ON t_goods.goods_type_id = t_goods_type.goods_type_id
        <where>
            <if test="codeOrName != null and codeOrName != ''">
                AND
                (
                t_goods.goods_name LIKE CONCAT('%', #{codeOrName} ,'%')  OR
                t_goods.goods_code LIKE CONCAT('%', #{codeOrName} ,'%')
                )
            </if>
            <if test="goodsTypeId != null and goodsTypeId != 1">
                AND
                (
                t_goods.goods_type_id = #{goodsTypeId} OR
                t_goods_type.p_id = #{goodsTypeId}
                )
            </if>
        </where>
        LIMIT #{offSet}, #{pageRow}
    </select>

    <select id="getGoodsInventoryCount" resultType="java.lang.Integer">
        SELECT
            COUNT(*)
        FROM
            t_goods
        LEFT JOIN t_goods_type ON t_goods.goods_type_id = t_goods_type.goods_type_id
        <where>
            <if test="codeOrName != null and codeOrName != ''">
                AND
                (
                t_goods.goods_name LIKE CONCAT('%', #{codeOrName} ,'%')  OR
                t_goods.goods_code LIKE CONCAT('%', #{codeOrName} ,'%')
                )
            </if>
            <if test="goodsTypeId != null and goodsTypeId != 1">
                AND
                (
                t_goods.goods_type_id = #{goodsTypeId} OR
                t_goods_type.p_id = #{goodsTypeId}
                )
            </if>
        </where>
    </select>

    <select id="getGoodsAlarm" resultMap="BaseResultMap">
        SELECT
            t_goods.goods_id,
            t_goods.goods_code,
            t_goods.goods_name,
            t_goods.inventory_quantity,
            t_goods.min_num,
            t_goods.goods_model,
            t_goods.goods_producer,
            t_goods.purchasing_price,
            t_goods.last_purchasing_price,
            t_goods.remarks,
            t_goods.selling_price,
            t_goods.state,
            t_goods.goods_unit,
            t_goods.goods_type_id,
            t_goods_type.goods_type_name
        FROM
            t_goods
        LEFT JOIN t_goods_type ON t_goods.goods_type_id = t_goods_type.goods_type_id
        WHERE
        t_goods.inventory_quantity &lt; t_goods.min_num
    </select>

</mapper>
